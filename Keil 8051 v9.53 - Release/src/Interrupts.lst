C51 COMPILER V9.53.0.0   INTERRUPTS                                                        06/07/2018 16:19:10 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INTERRUPTS
OBJECT MODULE PLACED IN .\src\Interrupts.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\VM\share\EFM8
                    -_PROJ\SONOFF-C1-EFM8\src\Interrupts.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9,
                    -SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:/VM/share/EFM8_PROJ/SONOFF-C1-EFM8/inc;C:/SiliconLabs/Simp
                    -licityStudio/v3/developer/sdks/si8051/v3//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8
                    -051/v3//Device/EFM8BB1;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB1/inc) REGFILE(Sonoff-C
                    -1-EFM8.ORC) PRINT(.\src\Interrupts.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\Interrupts.OBJ)

line level    source

   1          //=========================================================
   2          // src/Interrupts.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9                   
  10          // USER INCLUDES                        
  11          #include <SI_EFM8BB1_Register_Enums.h>
  12          #include "wireless_recv.h"
  13          #include "logic.h"
  14          #include "wireless_led.h"
  15          #include "key.h"
  16          
  17          //-----------------------------------------------------------------------------
  18          // PCA0_ISR
  19          //-----------------------------------------------------------------------------
  20          //
  21          // PCA0 ISR Content goes here. Remember to clear flag bits:
  22          // PCA0CN0::CCF0 (PCA Module 0 Capture/Compare Flag)
  23          // PCA0CN0::CCF1 (PCA Module 1 Capture/Compare Flag)
  24          // PCA0CN0::CCF2 (PCA Module 2 Capture/Compare Flag)
  25          // PCA0CN0::CF (PCA Counter/Timer Overflow Flag)
  26          // PCA0PWM::COVF (Cycle Overflow Flag)
  27          //
  28          // This is the ISR for the PCA.  It handles the case when a capture occurs on
  29          // channel 0, and updates the variables to reflect the new capture information.
  30          //10us
  31          //-----------------------------------------------------------------------------
  32          
  33          
  34          SI_INTERRUPT (PCA0_ISR, PCA0_IRQn)
  35          {
  36   1         static uint16_t current_capture_value, previous_capture_value;
  37   1         static uint16_t capture_period = 0;
  38   1         if (PCA0CN0_CCF0)                   // If Module 0 caused the interrupt
  39   1         {
  40   2                 PCA0CN0_CCF0 = 0;                // Clear module 0 interrupt flag.
  41   2                current_capture_value = PCA0CP0;
  42   2                capture_period = current_capture_value - previous_capture_value;
  43   2                previous_capture_value = current_capture_value;
  44   2                saveCaptureValue(capture_period);
  45   2         }
  46   1         else                                // Interrupt was caused by other bits.
  47   1         {
  48   2                PCA0CN0 &= ~0x86;                // Clear other interrupt flags for PCA
  49   2         }
  50   1      }
  51          
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        06/07/2018 16:19:10 PAGE 2   

  52          //-----------------------------------------------------------------------------
  53          // TIMER2_ISR
  54          //-----------------------------------------------------------------------------
  55          //
  56          // TIMER2 ISR Content goes here. Remember to clear flag bits:
  57          // TMR2CN0::TF2H (Timer # High Byte Overflow Flag)
  58          // TMR2CN0::TF2L (Timer # Low Byte Overflow Flag)
  59          // 2ms
  60          //-----------------------------------------------------------------------------
  61          SI_INTERRUPT (TIMER2_ISR, TIMER2_IRQn)
  62          {
  63   1              analyzeRfData();
  64   1              TMR2CN0_TF2H = 0;
  65   1      }
  66          
  67          //-----------------------------------------------------------------------------
  68          // TIMER3_ISR
  69          //-----------------------------------------------------------------------------
  70          //
  71          // TIMER3 ISR Content goes here. Remember to clear flag bits:
  72          // TMR3CN0::TF3H (Timer # High Byte Overflow Flag)
  73          // TMR3CN0::TF3L (Timer # Low Byte Overflow Flag)
  74          // 10ms
  75          //-----------------------------------------------------------------------------
  76          SI_INTERRUPT (TIMER3_ISR, TIMER3_IRQn)
  77          {
  78   1              timerout_cnt++;
  79   1          clkIntCnt ++;
  80   1         
  81   1              TMR3CN0 &= 0x7f;
  82   1      }
  83          
  84          
  85          //-----------------------------------------------------------------------------
  86          // UART0_ISR
  87          //-----------------------------------------------------------------------------
  88          //
  89          // UART0 ISR Content goes here. Remember to clear flag bits:
  90          // SCON0::RI (Receive Interrupt Flag)
  91          // SCON0::TI (Transmit Interrupt Flag)
  92          //
  93          //-----------------------------------------------------------------------------
  94          SI_INTERRUPT (UART0_ISR, UART0_IRQn)
  95          {
  96   1      
  97   1      }
  98          
  99          
 100          //-----------------------------------------------------------------------------
 101          // TIMER1_ISR
 102          //-----------------------------------------------------------------------------
 103          //
 104          // TIMER1 ISR Content goes here. Remember to clear flag bits:
 105          // TCON::TF1 (Timer 1 Overflow Flag)
 106          //100us
 107          //-----------------------------------------------------------------------------
 108          
 109          
 110          SI_INTERRUPT (TIMER1_ISR, TIMER1_IRQn)
 111          {
 112   1      
 113   1      }
 114          
C51 COMPILER V9.53.0.0   INTERRUPTS                                                        06/07/2018 16:19:10 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    193    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
