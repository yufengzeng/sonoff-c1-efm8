C51 COMPILER V9.53.0.0   LOGIC                                                             06/07/2018 11:22:28 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE LOGIC
OBJECT MODULE PLACED IN .\src\logic.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe D:\VM\share\EFM8
                    -_PROJ\SONOFF-C1-EFM8\src\logic.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED
                    -) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(D:/VM/share/EFM8_PROJ/SONOFF-C1-EFM8/inc;C:/SiliconLabs/Simplicity
                    -Studio/v3/developer/sdks/si8051/v3//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3
                    -//Device/EFM8BB1;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/EFM8BB1/inc) PRINT(.\src\logic.lst)
                    - COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\logic.OBJ)

line level    source

   1          /*
   2           * logic.c
   3           *
   4           *  Created on: 2017-5-2
   5           *      Author: Administrator
   6           */
   7          
   8          
   9          #include "logic.h"
  10          #include "key.h"
  11          #include "wireless_recv.h"
  12          #include "wireless_led.h"
  13          #include "EFM8BB1_FlashPrimitives.h"
  14          #include "EFM8BB1_FlashUtils.h"
  15          
  16          
  17          #define STORE_NUM_MAX   14
  18          #define SINGLE_LEN  5
  19          
  20          
  21          
  22          #define START_ADDRESS          (0x1600+0x400)
  23          
  24          
  25          SI_LOCATED_VARIABLE_NO_INIT(flash_write_array[512], uint8_t, SI_SEG_CODE, START_ADDRESS);
  26          
  27          
  28          DevMode dev_mode = DEV_NORMAL;
  29          
  30          uint16_t timerout_cnt = 0;
  31          
  32          
  33          uint8_t  gSelectChl = 0;
  34          
  35          uint8_t chl0_act_period = 0;
  36          
  37          uint8_t xdata remote_value_lib[3][71]={0};
  38          
  39          
  40          static void loadRemoteLib(void)
  41          {
  42   1          FLASH_Read(&remote_value_lib[0][0], START_ADDRESS, sizeof(remote_value_lib));
  43   1          if(remote_value_lib[0][0] >=3*STORE_NUM_MAX)
  44   1          {
  45   2              remote_value_lib[0][0] = 0;
  46   2          }
  47   1          if(remote_value_lib[1][0] >=3*STORE_NUM_MAX)
  48   1          {
  49   2              remote_value_lib[1][0] = 0;
  50   2          }
  51   1          if(remote_value_lib[2][0] >=3*STORE_NUM_MAX)
C51 COMPILER V9.53.0.0   LOGIC                                                             06/07/2018 11:22:28 PAGE 2   

  52   1          {
  53   2              remote_value_lib[2][0] = 0;
  54   2          }
  55   1          
  56   1          FLASH_PageErase(START_ADDRESS);  
  57   1          FLASH_Write(START_ADDRESS, &remote_value_lib[0][0], sizeof(remote_value_lib));
  58   1      }
  59          
  60          static uint8_t checkRemoteValue(IrData irFrm)
  61          {   
  62   1          uint8_t hg,le,rtu;
  63   1          uint8_t dataH = (irFrm.ir_data>>16)&0x000000ff;
  64   1          uint8_t dataM = (irFrm.ir_data>>8)&0x000000ff;
  65   1          uint8_t dataL = irFrm.ir_data&0x000000ff;
  66   1          uint16_t high_time;
  67   1      
  68   1          rtu = 0;
  69   1          for(hg =0; hg<3;hg++)
  70   1          {
  71   2              for(le =0; le<14;le++)
  72   2              {
  73   3                  if(le >= remote_value_lib[hg][0])
  74   3                  {break;}
  75   3                  if((remote_value_lib[hg][5*le+3] ==dataH)
  76   3                  &&(remote_value_lib[hg][5*le+4] ==dataM)
  77   3                  &&(remote_value_lib[hg][5*le+5] ==dataL)
  78   3                  )
  79   3                  {
  80   4                     high_time = (remote_value_lib[hg][5*le+1]<<8)+ remote_value_lib[hg][5*le+2];
  81   4                     if(irFrm.high_time < (high_time + high_time/5)
  82   4                       &&irFrm.high_time > (high_time - high_time/5)
  83   4                       )
  84   4                       {
  85   5                          rtu |=(1<<hg);
  86   5                          break;
  87   5                       }
  88   4                  }
  89   3              } 
  90   2          }
  91   1          return rtu;
  92   1      }
  93          
  94          
  95          static void saveToRemoteLib(uint8_t chl,IrData irFrm)
  96          {
  97   1          uint8_t value;
  98   1          if(chl>2) return;
  99   1          value = checkRemoteValue(irFrm);
 100   1          if((value&(1<<chl)) ==(1<<chl))
 101   1          {
 102   2              chl = chl;
 103   2          }
 104   1          else
 105   1          {
 106   2              value = remote_value_lib[chl][0];
 107   2              if(value >= 28)     /* 2*STORE_NUM_MAX*/
 108   2              {
 109   3                  value -= STORE_NUM_MAX;
 110   3              }
 111   2              remote_value_lib[chl][0] = value +1;
 112   2              value = value%STORE_NUM_MAX;
 113   2              remote_value_lib[chl][1+value*5] = (irFrm.high_time >>8);
 114   2              remote_value_lib[chl][2+value*5] = (irFrm.high_time &0xFF);
C51 COMPILER V9.53.0.0   LOGIC                                                             06/07/2018 11:22:28 PAGE 3   

 115   2              remote_value_lib[chl][3+value*5] = ((irFrm.ir_data >>16)&0xFF);
 116   2              remote_value_lib[chl][4+value*5] = ((irFrm.ir_data >>8)&0xFF);
 117   2              remote_value_lib[chl][5+value*5] = ((irFrm.ir_data )&0xFF);        
 118   2              FLASH_PageErase(START_ADDRESS);  
 119   2              FLASH_Write(START_ADDRESS, &remote_value_lib[0][0], sizeof(remote_value_lib));
 120   2          }
 121   1         
 122   1      }
 123          
 124          
 125          
 126          #if 1
 127          void delay_us(unsigned int k)
 128          {
 129   1          while(k--)
 130   1          {
 131   2              _nop_();_nop_();_nop_();_nop_();
 132   2              _nop_();_nop_();_nop_();_nop_();
 133   2              _nop_();
 134   2          }
 135   1      }
 136          void delay_1ms()
 137          {
 138   1          unsigned int j ;
 139   1          for(j=2450;j>0;j--);
 140   1      }
 141          
 142          void delay_ms(unsigned int i)
 143          {
 144   1          for(;i>0;i--)delay_1ms();
 145   1      }
 146          #endif
 147          
 148          
 149          
 150          void setDevMode(DevMode mode)
 151          {
 152   1          dev_mode = mode;
 153   1          timerout_cnt = 0;
 154   1      }
 155          
 156          
 157          
 158          static void delNormalEvent(void)
 159          {
 160   1          uint8_t value  = 0;
 161   1          if(ir_data.click_flag)
 162   1              {
 163   2                  ir_data.click_flag = false;
 164   2                      ir_data.timer_cnt = 0;
 165   2              value = checkRemoteValue(ir_data);
 166   2      
 167   2      
 168   2              if((value&(0x01)) ==(0x01))
 169   2              {
 170   3                      buzzerTimes(1);
 171   3                  chl0_act_period = 15;
 172   3              }
 173   2              }
 174   1      
 175   1      
 176   1      }
 177          
C51 COMPILER V9.53.0.0   LOGIC                                                             06/07/2018 11:22:28 PAGE 4   

 178          static void delStudyEvent(void)
 179          {
 180   1          if(ir_data.click_flag)
 181   1          {
 182   2              ir_data.click_flag = false;
 183   2                  buzzerTimes(1);
 184   2                      ir_data.timer_cnt = 0;
 185   2              saveToRemoteLib(gSelectChl,ir_data);
 186   2                      dev_mode = DEV_NORMAL;
 187   2              }
 188   1              else if(timerout_cnt >= 500)
 189   1              {
 190   2                      dev_mode = DEV_NORMAL;
 191   2              }
 192   1      
 193   1      }
 194          
 195          static void delClearEvent(void)
 196          {
 197   1          uint8_t cnt;
 198   1              if(ir_data.click_flag)
 199   1              {
 200   2                  ir_data.click_flag = false;
 201   2                      ir_data.timer_cnt = 0;
 202   2              remote_value_lib[gSelectChl][0] = 0;
 203   2      
 204   2              for(cnt = 0; cnt<71;cnt++)
 205   2              {
 206   3                  remote_value_lib[gSelectChl][cnt] = 0;
 207   3              }
 208   2                      dev_mode = DEV_NORMAL;
 209   2              FLASH_PageErase(START_ADDRESS);  
 210   2              FLASH_Write(START_ADDRESS, &remote_value_lib[0][0], sizeof(remote_value_lib));
 211   2              buzzerTimes(1);
 212   2       
 213   2              }
 214   1              else if(timerout_cnt >= 500) 
 215   1              {
 216   2                      dev_mode = DEV_NORMAL;
 217   2              }
 218   1      }
 219          
 220          
 221          
 222          
 223          static void delTestEvent(void)
 224          {
 225   1          uint8_t i,j;
 226   1          for(i = 0;i<3 ;i++)
 227   1          {
 228   2              for(j = 0;j<71 ;j++)
 229   2              {
 230   3                  remote_value_lib[i][j] =i+j;
 231   3              }
 232   2          }   
 233   1          FLASH_PageErase(START_ADDRESS);
 234   1          FLASH_Write(START_ADDRESS, &remote_value_lib[0][0], sizeof(remote_value_lib));
 235   1      
 236   1          for(i = 0;i<3 ;i++)
 237   1          {
 238   2              for(j = 0;j<71 ;j++)
 239   2              {
 240   3                  remote_value_lib[i][j] =3;
C51 COMPILER V9.53.0.0   LOGIC                                                             06/07/2018 11:22:28 PAGE 5   

 241   3              }
 242   2          }
 243   1          FLASH_Read(&remote_value_lib[0][0], START_ADDRESS, sizeof(remote_value_lib));
 244   1      }
 245          
 246          
 247          
 248          void delEvent(void)
 249          {
 250   1              switch(dev_mode)
 251   1              {
 252   2              case DEV_NORMAL:
 253   2                      delNormalEvent();
 254   2                      break;
 255   2              case DEV_STUDY:
 256   2                      delStudyEvent();
 257   2                      break;
 258   2              case DEV_CLEAR:
 259   2                      delClearEvent();
 260   2                      break;
 261   2              case DEV_TEST:
 262   2                  delTestEvent();
 263   2                  break;
 264   2              default:
 265   2                      break;
 266   2              }
 267   1      }
 268          
 269          
 270          void devInit(void)
 271          {
 272   1              BUZZER = 0;
 273   1              IO_WIFI_KEY0 = 1;
 274   1              loadRemoteLib();
 275   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1131    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    213    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      39
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
